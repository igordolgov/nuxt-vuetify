{"remainingRequest":"c:\\Users\\IgorDolgov\\Desktop\\igor\\vue-internet-shop-local-main\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!c:\\Users\\IgorDolgov\\Desktop\\igor\\vue-internet-shop-local-main\\node_modules\\pug-plain-loader\\index.js!c:\\Users\\IgorDolgov\\Desktop\\igor\\vue-internet-shop-local-main\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!c:\\Users\\IgorDolgov\\Desktop\\igor\\vue-internet-shop-local-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\Users\\IgorDolgov\\Desktop\\igor\\vue-internet-shop-local-main\\src\\pages\\ProductPage.vue?vue&type=template&id=e9c653ac&lang=pug&","dependencies":[{"path":"c:\\Users\\IgorDolgov\\Desktop\\igor\\vue-internet-shop-local-main\\src\\pages\\ProductPage.vue","mtime":1663132583607},{"path":"c:\\Users\\IgorDolgov\\Desktop\\igor\\vue-internet-shop-local-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663125509296},{"path":"c:\\Users\\IgorDolgov\\Desktop\\igor\\vue-internet-shop-local-main\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1663125525436},{"path":"c:\\Users\\IgorDolgov\\Desktop\\igor\\vue-internet-shop-local-main\\node_modules\\pug-plain-loader\\index.js","mtime":1663126338540},{"path":"c:\\Users\\IgorDolgov\\Desktop\\igor\\vue-internet-shop-local-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663125509296},{"path":"c:\\Users\\IgorDolgov\\Desktop\\igor\\vue-internet-shop-local-main\\node_modules\\vue-loader\\lib\\index.js","mtime":1663125521252}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}